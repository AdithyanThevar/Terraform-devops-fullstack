version: '3.3'

services:
  postgres:
    image: postgres:latest 
    container_name: postgres-db
    environment:
      POSTGRES_USER: "myuser"
      POSTGRES_PASSWORD: "mypassword"
      POSTGRES_DB: "mydatabase"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - custom-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser"]
      interval: 10s
      retries: 3

  backend:
    image: backend-image:latest 
    container_name: backend-app
    environment:
      DB_HOST: postgres  
      DB_USER: "myuser"
      DB_PASSWORD: "mypassword"
      DB_NAME: "mydatabase"
      DB_PORT: "5432"
      ALLOWED_ORIGINS: "http://$(curl -Ss ipinfo.io | grep '\"ip\"' | awk '{print $2}' | cut -d '\"' -f 2)"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - custom-network 
        
  frontend:
    image: frontend-image:latest 
    container_name: frontend-app
    environment:
      REACT_APP_SERVER_URL: "http://$(curl -Ss ipinfo.io | grep '\"ip\"' | awk '{print $2}' | cut -d '\"' -f 2)/employees"
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - custom-network

networks:
  custom-network:
    driver: bridge

volumes:
  postgres-data:
